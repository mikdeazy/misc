#!/usr/bin/env python
#
# Convert Hex to Electrum seeds
#
# Usage: hexseeds [address count]
#
# Reads 32 Hex chars per line

import sys, ecdsa, mnemonic, account, bitcoin

if __name__ == '__main__':
    
    for seed in sys.stdin:
        seed = seed[:32]
        print ' '.join(mnemonic.mn_encode(seed))

        master_k, master_c, master_K, master_cK = bitcoin.bip32_init(seed)
        k0, c0, K0, cK0 = bitcoin.bip32_private_derivation(master_k, master_c, "m/", "m/0'/")
        c0, K0, cK0 = bitcoin.bip32_public_derivation(c0.decode('hex'), K0.decode('hex'), "m/0'/", "m/0'/0")
        
        acct = account.BIP32_Account({ 'c':c0, 'K':K0, 'cK':cK0 })
        addrcount = 5 if len( sys.argv ) == 1 else int(sys.argv[1])
        for i in range(addrcount):
            acct.create_new_address(0)
        print 
