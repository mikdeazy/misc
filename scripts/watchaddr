#!/usr/bin/env python
#
# Insert addresses from stdin in Electrum 2.0 watch-only wallet.
# Create wallet if doesn't exist.
# 
# Process a csv file with addresses in a column using,
#
# cut test_list -f2 -s -d, | watchaddr -- test_wallet
#
# where, column index is 2, delimiter is comma, change to suit
#
# or if one address per line, simply,
#
# watchaddr test_list test_wallet
#
# Text preceding or following will be added as a label
# if separated by ':' or ' '.
#

import sys, json

empty = "{\"accounts\": {\"/x\": {\"imported\": { } } },\"labels\":{},\"wallet_type\": \"imported\" }"
labelsep = ':'

if len(sys.argv) < 3:
    print "Usage: %s <address file> <wallet file>\n\nRead addresses from file and create/update wallet." % sys.argv[0]
    print "Creates or updates an Electrum 2.0 'watch-only' wallet with imported addresses."
    print "Use -- for <address file> to read from stdin."
    sys.exit(1)
    
if sys.argv[1] != "--":
    sys.stdin = open(sys.argv[1], 'r')

try:
    with open(sys.argv[2]) as json_file:
        wallet = json.load(json_file)
except IOError:
    wallet = json.loads(empty)

if wallet["wallet_type"] != "imported":
    sys.stdin.read()
    sys.exit("Error: Not a watch-only wallet.")

for line in sys.stdin:
    line = line.replace('\n', '')
    if line[0] == '1' or line[0] == '3':
        addr,_,label = line.partition(labelsep if (labelsep in line) else ' ')
    else:
        label,_,addr = line.partition(labelsep if (labelsep in line) else ' ')
    if addr:
        wallet["accounts"]["/x"]["imported"][addr] = [None,None]
    if label:
        wallet["labels"][addr] = label
    print "Added:", addr, label

with open(sys.argv[2], 'w') as json_file:
    json.dump(wallet, json_file, indent=4)

    





    

